=== Detailed log started at 2025-03-18 16:15:08 ===
## Behaviour Generator: PurposefulSuspiciousBehaviourGenerator{type=Purposeful, epsilon=0.3, stepsBeforeOptimal=20}



## Initial state:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos3_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos3_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 1.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 1.0
Calculating summed score
Total score: 2.0
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 pos1_1))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos3_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos2_2 
?X2 - place : apt1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos2_2))
Effects:
(and (at truck2 apt1_2)
  (not (at truck2 pos2_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 apt1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos3_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 2.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 10.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 2.718281828459045
Score for problem 2: 1.0
Calculating summed score
Total score: 3.718281828459045
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos2_2 
?X2 - place : pos3_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos2_2))
Effects:
(and (at truck2 pos3_2)
  (not (at truck2 pos2_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos3_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 2.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 1.0
Calculating summed score
Total score: 2.0
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos2_2 
?X2 - place : pos3_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos2_2))
Effects:
(and (at truck2 pos3_2)
  (not (at truck2 pos2_2))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos3_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action load-truck
Instantiations:
?X0 - package : pkg6 
?X1 - truck : truck2 
?X2 - place : pos3_2 
Preconditions:
(and (at truck2 pos3_2)
  (at pkg6 pos3_2))
Effects:
(and (in pkg6 truck2)
  (not (at pkg6 pos3_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 3.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 1.0
Calculating summed score
Total score: 2.0
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action load-truck
Instantiations:
?X0 - package : pkg6 
?X1 - truck : truck2 
?X2 - place : pos3_2 
Preconditions:
(and (at truck2 pos3_2)
  (at pkg6 pos3_2))
Effects:
(and (in pkg6 truck2)
  (not (at pkg6 pos3_2))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos2_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos2_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 4.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 13.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.1353352832366127
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.503214724408055
Final probability: 0.2689414213699951
Final probability: 0.7310585786300049
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 4.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 13.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.1353352832366127
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.503214724408055
Final probability: 0.2689414213699951
Final probability: 0.7310585786300049
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos3_2 
?X2 - place : pos1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos3_2))
Effects:
(and (at truck2 pos1_2)
  (not (at truck2 pos3_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 4.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 1.0
Calculating summed score
Total score: 2.0
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos3_2 
?X2 - place : pos1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos3_2))
Effects:
(and (at truck2 pos1_2)
  (not (at truck2 pos3_2))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action unload-truck
Instantiations:
?X0 - package : pkg6 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (in pkg6 truck2))
Effects:
(and (at pkg6 pos1_2)
  (not (in pkg6 truck2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 5.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 1.0
Calculating summed score
Total score: 2.0
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action unload-truck
Instantiations:
?X0 - package : pkg6 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (in pkg6 truck2))
Effects:
(and (at pkg6 pos1_2)
  (not (in pkg6 truck2))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos2_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos2_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 6.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : pos2_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 pos2_1)
  (not (at truck1 pos1_1))

## New State:
(and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos2_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos2_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 pos2_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 7.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos2_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos2_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 pos2_1))

## New State:
(and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action fly-airplane
Instantiations:
?X0 - airplane : plane1 
?X1 - airport : apt1_2 
?X2 - airport : apt1_1 
Preconditions:
(and (at plane1 apt1_2))
Effects:
(and (at plane1 apt1_1)
  (not (at plane1 apt1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 8.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action fly-airplane
Instantiations:
?X0 - airplane : plane1 
?X1 - airport : apt1_2 
?X2 - airport : apt1_1 
Preconditions:
(and (at plane1 apt1_2))
Effects:
(and (at plane1 apt1_1)
  (not (at plane1 apt1_2))

## New State:
(and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action load-truck
Instantiations:
?X0 - package : pkg4 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (at pkg4 pos1_2))
Effects:
(and (in pkg4 truck2)
  (not (at pkg4 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 9.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action load-truck
Instantiations:
?X0 - package : pkg4 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (at pkg4 pos1_2))
Effects:
(and (in pkg4 truck2)
  (not (at pkg4 pos1_2))

## New State:
(and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action fly-airplane
Instantiations:
?X0 - airplane : plane1 
?X1 - airport : apt1_1 
?X2 - airport : apt1_1 
Preconditions:
(and (at plane1 apt1_1))
Effects:
(and (at plane1 apt1_1)
  (not (at plane1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : apt1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 apt1_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 apt1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 10.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 2.718281828459045
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 3.0861612696304874
Final probability: 0.8807970779778824
Final probability: 0.11920292202211756
Recognising Complete!
Highest probability: 0.8807970779778824
Second highest: 0.11920292202211756
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action load-truck
Instantiations:
?X0 - package : pkg6 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (at pkg6 pos1_2))
Effects:
(and (in pkg6 truck2)
  (not (at pkg6 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 1.3678794411714423
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action unload-truck
Instantiations:
?X0 - package : pkg4 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (in pkg4 truck2))
Effects:
(and (at pkg4 pos1_2)
  (not (in pkg4 truck2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos1_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos3_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos3_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 1.3678794411714423
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos2_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos2_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 1.3678794411714423
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos2_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos2_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 1.3678794411714423
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 10.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 2.718281828459045
Score for problem 2: 1.0
Calculating summed score
Total score: 3.718281828459045
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos1_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos3_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos3_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos3_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_1)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 1.3678794411714423
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action fly-airplane
Instantiations:
?X0 - airplane : plane1 
?X1 - airport : apt1_1 
?X2 - airport : apt1_2 
Preconditions:
(and (at plane1 apt1_1))
Effects:
(and (at plane1 apt1_2)
  (not (at plane1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 10.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action fly-airplane
Instantiations:
?X0 - airplane : plane1 
?X1 - airport : apt1_1 
?X2 - airport : apt1_2 
Preconditions:
(and (at plane1 apt1_1))
Effects:
(and (at plane1 apt1_2)
  (not (at plane1 apt1_1))

## New State:
(and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos3_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos3_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos3_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 11.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 13.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.1353352832366127
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.503214724408055
Final probability: 0.2689414213699951
Final probability: 0.7310585786300049
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 11.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 1.0
Calculating summed score
Total score: 2.0
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 apt1_1))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos1_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos2_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos2_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 12.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 3.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 1.0
Calculating summed score
Total score: 2.0
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos2_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos2_2)
  (not (at truck2 pos1_2))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 pos1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 13.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos1_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos1_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 pos1_1))

## New State:
(and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (in pkg4 truck2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action unload-truck
Instantiations:
?X0 - package : pkg4 
?X1 - truck : truck2 
?X2 - place : pos2_2 
Preconditions:
(and (at truck2 pos2_2)
  (in pkg4 truck2))
Effects:
(and (at pkg4 pos2_2)
  (not (in pkg4 truck2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 14.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action unload-truck
Instantiations:
?X0 - package : pkg4 
?X1 - truck : truck2 
?X2 - place : pos2_2 
Preconditions:
(and (at truck2 pos2_2)
  (in pkg4 truck2))
Effects:
(and (at pkg4 pos2_2)
  (not (in pkg4 truck2))

## New State:
(and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos2_2 
?X2 - place : apt1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos2_2))
Effects:
(and (at truck2 apt1_2)
  (not (at truck2 pos2_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 apt1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 15.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 1.3678794411714423
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos2_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos2_1)
  (not (at truck1 apt1_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 15.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : apt1_1 
?X2 - place : pos2_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 apt1_1))
Effects:
(and (at truck1 pos2_1)
  (not (at truck1 apt1_1))

## New State:
(and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action fly-airplane
Instantiations:
?X0 - airplane : plane1 
?X1 - airport : apt1_2 
?X2 - airport : apt1_2 
Preconditions:
(and (at plane1 apt1_2))
Effects:
(and (at plane1 apt1_2)
  (not (at plane1 apt1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos2_2 
?X2 - place : pos3_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos2_2))
Effects:
(and (at truck2 pos3_2)
  (not (at truck2 pos2_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 16.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos2_2 
?X2 - place : pos3_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos2_2))
Effects:
(and (at truck2 pos3_2)
  (not (at truck2 pos2_2))

## New State:
(and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos2_1 
?X2 - place : pos2_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos2_1))
Effects:
(and (at truck1 pos2_1)
  (not (at truck1 pos2_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos3_2 
?X2 - place : pos3_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos3_2))
Effects:
(and (at truck2 pos3_2)
  (not (at truck2 pos3_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has been observed. Choosing another action
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos2_1 
?X2 - place : apt1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos2_1))
Effects:
(and (at truck1 apt1_1)
  (not (at truck1 pos2_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at truck1 apt1_1)
 (at pkg1 pos1_1)
 (at truck2 pos3_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 17.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 13.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.1353352832366127
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.503214724408055
Final probability: 0.2689414213699951
Final probability: 0.7310585786300049
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos3_2 
?X2 - place : pos1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos3_2))
Effects:
(and (at truck2 pos1_2)
  (not (at truck2 pos3_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 17.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos3_2 
?X2 - place : pos1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos3_2))
Effects:
(and (at truck2 pos1_2)
  (not (at truck2 pos3_2))

## New State:
(and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (at pkg6 pos1_2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action load-truck
Instantiations:
?X0 - package : pkg6 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (at pkg6 pos1_2))
Effects:
(and (in pkg6 truck2)
  (not (at pkg6 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 18.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action load-truck
Instantiations:
?X0 - package : pkg6 
?X1 - truck : truck2 
?X2 - place : pos1_2 
Preconditions:
(and (at truck2 pos1_2)
  (at pkg6 pos1_2))
Effects:
(and (in pkg6 truck2)
  (not (at pkg6 pos1_2))

## New State:
(and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Still acting suspicious
Randomising actions
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : apt1_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 apt1_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 apt1_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 19.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 11.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 1.0
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 1.3678794411714423
Final probability: 0.7310585786300049
Final probability: 0.2689414213699951
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action load-truck
Instantiations:
?X0 - package : pkg2 
?X1 - truck : truck1 
?X2 - place : pos2_1 
Preconditions:
(and (at truck1 pos2_1)
  (at pkg2 pos2_1))
Effects:
(and (in pkg2 truck1)
  (not (at pkg2 pos2_1))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos1_2)
 (in pkg2 truck1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 19.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 13.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.1353352832366127
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.503214724408055
Final probability: 0.2689414213699951
Final probability: 0.7310585786300049
Recognising Complete!
Highest probability: 0.7310585786300049
Second highest: 0.2689414213699951
Difference between probabilities is greater than epsilon. Skipping action.
Chosen Action: 
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos2_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos2_2)
  (not (at truck2 pos1_2))

Action is applicable to state
Applying action to temporary state
Temporary state after action: (and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
Checking if state has already been observed
State has not been observed
Mirroing delta: 19.0
Starting recognising
Planning for problem 1 starting
Setting initial state to current state
Generating plan
Plan's cost: 12.0
Reseting initial state of problem
Planning for problem 2 starting
Setting initial state to current state
Generating plan
Plan's cost: 4.0
Reseting initial state of problem
Generating scores for problems
Score for problem 1: 0.36787944117144233
Score for problem 2: 0.36787944117144233
Calculating summed score
Total score: 0.7357588823428847
Final probability: 0.5
Final probability: 0.5
Recognising Complete!
Highest probability: 0.5
Second highest: 0.5
Difference between probabilities is less than epsilon. Choosing action.
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck2 
?X1 - place : pos1_2 
?X2 - place : pos2_2 
?X3 - city : city2 
Preconditions:
(and (at truck2 pos1_2))
Effects:
(and (at truck2 pos2_2)
  (not (at truck2 pos1_2))

## New State:
(and (at pkg1 pos1_1)
 (at truck1 pos2_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Checking if completed enough steps to act optimal
Acting Optimally
## Action Made:
Action drive-truck
Instantiations:
?X0 - truck : truck1 
?X1 - place : pos2_1 
?X2 - place : pos1_1 
?X3 - city : city1 
Preconditions:
(and (at truck1 pos2_1))
Effects:
(and (at truck1 pos1_1)
  (not (at truck1 pos2_1))

## New State:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)



Final state:
(and (at truck1 pos1_1)
 (at pkg1 pos1_1)
 (at truck2 pos2_2)
 (at pkg2 pos2_1)
 (at pkg3 pos3_1)
 (at pkg4 pos2_2)
 (at pkg5 pos2_2)
 (in pkg6 truck2)
 (at plane1 apt1_2)
 (in-city apt1_1 city1)
 (in-city pos1_1 city1)
 (in-city pos2_1 city1)
 (in-city pos3_1 city1)
 (in-city apt1_2 city2)
 (in-city pos1_2 city2)
 (in-city pos2_2 city2)
 (in-city pos3_2 city2)
)
